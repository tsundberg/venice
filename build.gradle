import java.text.SimpleDateFormat

plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '1.2.3'
}

version = '1.0-SNAPSHOT'

compileJava {
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
}

sourceSets {
    integrationTest {
        java {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir file('src/integration-test/java')
        }
        resources.srcDir file('src/integration-test/resources')
    }
}

configurations {
    integrationTestCompile.extendsFrom testCompile
    integrationTestRuntime.extendsFrom testRuntime
}

dependencies {
    compile 'com.sparkjava:spark-core:2.5'
    compile 'com.sparkjava:spark-template-mustache:2.3'
    compile 'org.slf4j:slf4j-simple:1.7.21'
    compile 'org.apache.httpcomponents:httpclient:4.5.3'
    compile 'org.apache.httpcomponents:fluent-hc:4.5.3'
    compile 'org.codeartisans:org.json:20161124'
    compile 'org.elasticsearch:elasticsearch:2.2.2'

    testCompile 'org.assertj:assertj-core:3.6.2'
    testCompile 'com.google.code.gson:gson:2.8.0'
    testCompile 'junit:junit:4.12'
    testCompile "org.mockito:mockito-core:2.7.5"
}

test {
    testLogging.showStandardStreams = true
    systemProperties System.getProperties()
}

task integrationTest(type: Test) {
    testClassesDir = sourceSets.integrationTest.output.classesDir
    classpath = sourceSets.integrationTest.runtimeClasspath
}

integrationTest.mustRunAfter test

tasks.withType(Test) {
    reports.html.destination = file("${reporting.baseDir}/${name}")
}

shadowJar {
    it.dependsOn build
    mergeServiceFiles()
    exclude 'META-INF/*.DSA'
    exclude 'META-INF/*.RSA'
    manifest {
        attributes 'Main-Class': 'se.arbetsformedlingen.venice.Main',
                'Build-Date': new SimpleDateFormat("yyyy-MM-dd HH:mm").format(new Date())
    }
}

task stage() {
    it.dependsOn check, integrationTest, shadowJar
}

repositories {
    maven {
        url "http://nexus.ws.ams.se:8081/nexus/content/groups/public"
    }

    jcenter()
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.10'
}